<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Flowey &amp; Code</title>
    <link>https://lin-roger.github.io/posts/</link>
    <description>Recent content in Posts on Flowey &amp; Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Dec 2023 21:29:32 +0800</lastBuildDate><atom:link href="https://lin-roger.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SELF-ICL: Zero-Shot In-Context Learning with Self-Generated Demonstrations</title>
      <link>https://lin-roger.github.io/posts/selficlzeroshotincontextlearningwithselfgenerateddemonstrations/</link>
      <pubDate>Fri, 29 Dec 2023 21:29:32 +0800</pubDate>
      
      <guid>https://lin-roger.github.io/posts/selficlzeroshotincontextlearningwithselfgenerateddemonstrations/</guid>
      <description>A simple framework which bootstraps LMs&amp;rsquo; intrinsic capabilities to perform zero-shot ICL</description>
    </item>
    
    <item>
      <title>Recommender systems handbook || 閱讀紀錄 1. Data Mining Methods for Recommender Systems</title>
      <link>https://lin-roger.github.io/posts/dataminingmethodsforrecommendersystems/</link>
      <pubDate>Mon, 18 Sep 2023 05:59:25 +0800</pubDate>
      
      <guid>https://lin-roger.github.io/posts/dataminingmethodsforrecommendersystems/</guid>
      <description>推薦系統中的資料探勘方法。本章介紹推薦系統中常用的資料探勘(Data mining, DM)技術。首先描述的是常見的資料預處理方法，如抽樣與降維。接著回顧推薦系統中重要的分類/分群技術，如:貝葉斯網路和支援向量機(SVM)/k-mean。</description>
    </item>
    
    <item>
      <title>Recommender systems handbook || 閱讀紀錄 0.概述</title>
      <link>https://lin-roger.github.io/posts/recommendersystemshandbook/</link>
      <pubDate>Sat, 16 Sep 2023 14:00:00 +0800</pubDate>
      
      <guid>https://lin-roger.github.io/posts/recommendersystemshandbook/</guid>
      <description>簡要說明推薦系統(RS)的基本概念，與此書的基本架構</description>
    </item>
    
    <item>
      <title>🚧Advanced Prompting Engineering 進階提示工程🚧</title>
      <link>https://lin-roger.github.io/posts/advancedpromptingengineering/</link>
      <pubDate>Mon, 26 Jun 2023 02:38:25 +0800</pubDate>
      
      <guid>https://lin-roger.github.io/posts/advancedpromptingengineering/</guid>
      <description>🚧目前進度:deepl部分翻譯🚧</description>
    </item>
    
    <item>
      <title>prompt-engineering 基礎</title>
      <link>https://lin-roger.github.io/posts/promptee/</link>
      <pubDate>Mon, 26 Jun 2023 01:17:51 +0800</pubDate>
      
      <guid>https://lin-roger.github.io/posts/promptee/</guid>
      <description>簡單介紹prompt-engineering</description>
    </item>
    
    <item>
      <title>Dimension Reduction in Text Classification with Support Vector Machines</title>
      <link>https://lin-roger.github.io/posts/dimensionreductionintextclassificationwithsupportvectormachines/</link>
      <pubDate>Mon, 07 Nov 2022 02:46:26 +0800</pubDate>
      
      <guid>https://lin-roger.github.io/posts/dimensionreductionintextclassificationwithsupportvectormachines/</guid>
      <description>非經典古文，可以不用看，主要是我的筆記。SVM被公認是許多任務中效果最好的分類方法之一，SVM的學習能力和訓練計算複雜度與特徵空間維度無關，但在文本分類任務中，降低複雜度是有效處裡大量詞語的一個要點。該論文採用新的降維方法降低文檔向量的維度。還為基於中心的分類算法和SVM分類器引入決策函數，處理一個文檔可能屬於多個class的問題。分析大量的實驗結果表明使用為聚類資料設計的降維算法，使輸入維度降低，可在不犧牲預測精度的情況下取得更好的訓練效率。</description>
    </item>
    
  </channel>
</rss>
